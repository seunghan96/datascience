data<-factor('a','b','c')
data
data<-factor('a',c('a','b'))
data
x<-list(name='a',foo='b')
x
x <- array( 1:12, dim(2,2,3) )
x<-array(1:12,dim=c(2,3,4)))
x<-array(1:12,dim=c(2,3,4))
,,1
, , 1
1
, , 1
,,1
(x<-array(1:12,dim=c(2,3,4)))
x[,,3]
q()
nreps <- 1--
da
fweq
nreps <- 100
l1 <- numeric(nreps)
u1 <- numeric(nreps)
n <- 100
mu <0 500
mu <- 500
sigma <- 100
for *i in 1 nreps) {}
for (i in 1 nreps) {}
for (i in 1 nreps) {
# 경로 설정
setwd("C:\\Users\\samsung\\Desktop\\Bitamin\\Machine Learning with R\\5장")
##############################################################################
# < Decision Tree >
# 파일 불러오기
credit <- read.csv("credit.csv")
# 구조 & 타깃의 table 확인하기
str(credit)
table(credit$default)
# (1) 데이터 나누기
set.seed(123)
train_sample <- sample(1000,900)
credit_train <- credit[train_sample,]
credit_test <- credit[-train_sample,]
# 비율 점검 (고르게 섞였는지)
prop.table(table(credit_train$default))
prop.table(table(credit_test$default))
# (2) 학습시키기
library(C50)
credit_model <- C5.0(credit_train[-17], credit_train$default)
# 들여다보기
summary(credit_model)
# (3) 평가하기
library(gmodels)
credit_pred <- predict(credit_model, credit_test)
CrossTable(credit_test$default, credit_pred, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual default','predicted default'))
# (4) 모델 개선 by 부스팅
credit_boost10 <- C5.0(credit_train[-17], credit_train$default, trials=10)
summary(credit_boost10)
credit_boost_pred10 <- predict(credit_boost10, credit_test)
CrossTable(credit_test$default, credit_boost_pred10, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual default','predicted default'))
# (5) cost matrix 작성 1
matrix_dimensions <- list(c('no','yes'),c('no','yes'))
names(matrix_dimensions) <- c('predicted','actual')
error_cost <- matrix(c(0,1,4,0),nrow=2, dimnames=matrix_dimensions)
# (6) cost matrix 작성 2
credit_cost <- C5.0(credit_train[-17],credit_train$default, costs=error_cost)
credit_cost_pred <- predict(credit_cost, credit_test)
CrossTable(credit_test$default, credit_cost_pred, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual default','predicted default'))
#############################################################################################################################
# < Rule Learners >
# 파일 불러오기
mushrooms <- read.csv("mushrooms.csv", stringsAsFactors=TRUE)
mushrooms$veil_type <- NULL
# 비율 확인하기
table(mushrooms$type)
# (1) 학습시키기
library(RWeka)
mushroom_1R <- OneR(type~.,data=mushrooms)
# (2) 평가하기
summary(mushroom_1R)
# (3) 개선하기 (RIPPER 사용)
mushroom_JRip <- JRip(type~.,data=mushrooms)
mushroom_JRip
# 파일 불러오기
credit <- read.csv("credit.csv")
# 구조 & 타깃의 table 확인하기
str(credit)
table(credit$default)
# (1) 데이터 나누기
set.seed(123)
train_sample <- sample(1000,900)
credit_train <- credit[train_sample,]
credit_test <- credit[-train_sample,]
# 비율 점검 (고르게 섞였는지)
prop.table(table(credit_train$default))
prop.table(table(credit_test$default))
# (2) 학습시키기
library(C50)
credit_model <- C5.0(credit_train[-17], credit_train$default)
# 들여다보기
summary(credit_model)
# (3) 평가하기
library(gmodels)
credit_pred <- predict(credit_model, credit_test)
CrossTable(credit_test$default, credit_pred, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual default','predicted default'))
# (4) 모델 개선 by 부스팅
credit_boost10 <- C5.0(credit_train[-17], credit_train$default, trials=10)
summary(credit_boost10)
credit_boost_pred10 <- predict(credit_boost10, credit_test)
credit_boost_pred10 <- predict(credit_boost10, credit_test)
CrossTable(credit_test$default, credit_boost_pred10, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual default','predicted default'))
# (5) cost matrix 작성 1
matrix_dimensions <- list(c('no','yes'),c('no','yes'))
names(matrix_dimensions) <- c('predicted','actual')
error_cost <- matrix(c(0,1,4,0),nrow=2, dimnames=matrix_dimensions)
# (5) cost matrix 작성 1
matrix_dimensions <- list(c('no','yes'),c('no','yes'))
names(matrix_dimensions) <- c('predicted','actual')
matrix_dimensions
error_cost <- matrix(c(0,1,4,0),nrow=2, dimnames=matrix_dimensions)
error_cost
# (6) cost matrix 작성 2
credit_cost <- C5.0(credit_train[-17],credit_train$default, costs=error_cost)
credit_cost_pred <- predict(credit_cost, credit_test)
CrossTable(credit_test$default, credit_cost_pred, prop.chisq=FALSE, prop.c=FALSE, prop.r=FALSE, dnn=c('actual default','predicted default'))
# 파일 불러오기
mushrooms <- read.csv("mushrooms.csv", stringsAsFactors=TRUE)
mushrooms$veil_type <- NULL
# 비율 확인하기
table(mushrooms$type)
# (1) 학습시키기
library(RWeka)
mushroom_1R <- OneR(type~.,data=mushrooms)
# (2) 평가하기
summary(mushroom_1R)
# (1) 학습시키기
library(RWeka)
